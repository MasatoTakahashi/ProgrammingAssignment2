# just modified the sample code to process a matrix
# and change a function from mean to solve to obtain a inverse matrix

# makeCacherMatrix() make an object contains 4 functions
# set() is to set the elements of a matrix which was set in the argument x
# get() is just to get the value of matrix itself
# setSolution() is a function to set an inverse matrix for the matrix
# getSolution() is a function to get an inverse matrix which cached in the object
makeCacheMatrix <- function(x = matrix() ){
  m <- NULL
  set <- function(y){
    x<<-y
    m<<-NULL
  }
  get <- function() x
  setSolution <- function(solve) m<<-solve
  getSolution <- function() m
  return(list(set=set, get=get, setSolution=setSolution, getSolution=getSolution))
}

# cacheSolve() is a function to cache the inverse matrix for x
# object x require to have the 4 functions which were generated by makeCacheMatrix()
cacheSolve <- function(x, ...){
 m <- x$getSolution()
 if(!is.null(m)){
   message("getting chached data")
   return(m)
 }
 data <- x$get()
 m <- solve(data, ...)
 x$setSolution(m)
 return(m)
}
